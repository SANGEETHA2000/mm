# -*- coding: utf-8 -*-
"""MM_WS4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VQNR0ci3ZUuJP6QIqFbUZquoRsgE537y
"""

import numpy as np
import pandas as pd
import statistics
from scipy import stats
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

"""# Functions Required"""

def linear_reg(x, y, n):
  
  xy = np.dot(np.array(x), np.array(y))

  sum_x = sum(x)
  sum_y = sum(y)
  sq_sum_x = sum_x**2
  sum_x_sq = 0
  for i in x:
    sum_x_sq += i**2

  a = (((n*xy) - (sum_x*sum_y)) /((n*sum_x_sq) - sq_sum_x))
  b = ((sum_y - (a*sum_x))/n)

  return a, b

def eval_metrics(y, y_cap, n):

  sse = 0
  sst = 0
  y_bar = sum(y)/n
  for i in range(n):
    err_diff = y[i] - y_cap[i]
    sse += (err_diff)**2
    sst += (y[i] - y_bar)**2

  correlation = 1-(sse/sst)
  return sse, sst, correlation

def ttest(y, y_cap):
  t, p = stats.ttest_ind(y, y_cap)
  return t, p

"""#Read dataframe"""

df = pd.read_csv('500096.csv', usecols=['Month', 'Open Price', 'High Price', 'Low Price', 'Close Price'])
month = df['Month'].tolist()

"""# LR: x = Open Price, y = Close Price"""

x = df['Open Price'].tolist()
y = df['Close Price'].tolist()
n_x = len(x)
print("x = Open Price, y = Close Price")
a, b = linear_reg(x, y, n_x)
print("Linear Regression Model: y = ", a, "x + ", b)
y_cap = [((a*i)+b) for i in x]
print(y_cap)

plt.rcParams['figure.figsize']=(15, 6)
plt.scatter(x, y, color="r", label="Actual")
plt.plot(x, y_cap, color="g", label="Predicted")
plt.legend()
plt.xlabel("Open Price")
plt.ylabel("Close Price")
plt.show()

plt.plot(y, color="r", label="Actual")
plt.plot(y_cap, color="g", label="Predicted")
plt.legend()
plt.xlabel("Month Index")
plt.ylabel("Close Price")
plt.show()

sse, sst, correlation = eval_metrics(y, y_cap, len(y))
print("Correlation : ", correlation)

t, p = ttest(y, y_cap)
print("T-test value(Linear Reg): ", p)

"""# LR: x = Low Price, y = High Price"""

x = df['Low Price'].tolist()
y = df['High Price'].tolist()
n_x = len(x)
print("x = Low Price, y = High Price")
a, b = linear_reg(x, y, n_x)
print("Linear Regression Model: y = ", a, "x + ", b)
y_cap = [((a*i)+b) for i in x]
print(y_cap)

plt.scatter(x, y, color="r", label="Actual")
plt.plot(x, y_cap, color="g", label="Predicted")
plt.legend()
plt.xlabel("Low Price")
plt.ylabel("High Price")
plt.show()

plt.plot(y, color="r", label="Actual")
plt.plot(y_cap, color="g", label="Predicted")
plt.legend()
plt.xlabel("Month Index")
plt.ylabel("Hihgh Price")
plt.show()

sse, sst, correlation = eval_metrics(y, y_cap, len(y))
print("Correlation : ", correlation)

t, p = ttest(y, y_cap)
print("T-test value(Linear Reg): ", p)

"""# MLR: x = Open Price, Low Price, High Price; y = Close Price"""

x = df[["Open Price", "Low Price", "High Price"]]
y = df["Close Price"]

regr = LinearRegression().fit(x, y)
y_pred = regr.predict(x)

print("Coefficient : ", regr.coef_)
print("Intercept : ", regr.intercept_)

t,p = ttest(y, y_pred)
print("T-test value(Multiple Reg): ",p)

plt.scatter(df["Open Price"], y, color="r", label="Actual")
plt.scatter(df["Open Price"], y_pred, color="g", label="Predicted")
plt.legend()
plt.xlabel("Open Price")
plt.ylabel("Close Price")
plt.show()

plt.scatter(df["Low Price"], y, color="r", label="Actual")
plt.scatter(df["Low Price"], y_pred, color="g", label="Predicted")
plt.legend()
plt.xlabel("Low Price")
plt.ylabel("Close Price")
plt.show()

plt.scatter(df["High Price"], y, color="r", label="Actual")
plt.scatter(df["High Price"], y_pred, color="g", label="Predicted")
plt.legend()
plt.xlabel("High Price")
plt.ylabel("Close Price")
plt.show()